
# exp_internal 1

### test for output formatting of show table queries
set test_name "test for output formatting of show table queries"
# the show tables query should return one line per table in the current schema
given an executable "../pinedb/pinedb" \
  when I run \
  and I send "create schema testschema;\r" \
  then I should see "ok" \
  when I send "use testschema;\r" \
  then I should see "ok" \
  when I send "create table testtable1 ( col int );\r" \
  then I should see "ok" \
  when I send "create table testtable2 ( col int );\r" \
  then I should see "ok" \
  when I send "show tables;\r\x04" \
  then I should see "testtable1" \
  and I should see "testtable2" \
  and I should see "ok: returned 2 rows" \
  and it should return 0
# the table should be case insensitive
given an executable "../pinedb/pinedb" \
  when I run \
  and I send "create schema testschema;\r" \
  then I should see "ok" \
  when I send "use testschema;\r" \
  then I should see "ok" \
  when I send "create table testtable1 ( col int );\r" \
  then I should see "ok" \
  when I send "create table testtable2 ( col int );\r" \
  then I should see "ok" \
  when I send "SHOW TABLES;\r\x04" \
  then I should see "testtable1" \
  and I should see "testtable2" \
  and I should see "ok: returned 2 rows" \
  and it should return 0
# tables in foreign schemata should not be listed
given an executable "../pinedb/pinedb" \
  when I run \
  and I send "create schema testschema1;\r" \
  then I should see "ok" \
  when I send "create schema testschema2;\r" \
  then I should see "ok" \
  when I send "use testschema1;\r" \
  then I should see "ok" \
  when I send "create table testtable1 ( col int );\r" \
  then I should see "ok" \
  when I send "create table testschema2.testtable2 ( col int );\r" \
  then I should see "ok" \
  when I send "show tables;\r\x04" \
  then I should see "testtable1" \
  and I should see "ok: returned 1 rows" \
  and it should return 0
# a foreign schema should be selectable using the `from` keyword
given an executable "../pinedb/pinedb" \
  when I run \
  and I send "create schema testschema1;\r" \
  then I should see "ok" \
  when I send "create schema testschema2;\r" \
  then I should see "ok" \
  when I send "use testschema1;\r" \
  then I should see "ok" \
  when I send "create table testtable1 ( col int );\r" \
  then I should see "ok" \
  when I send "create table testschema2.testtable2 ( col int );\r" \
  then I should see "ok" \
  when I send "show tables from testschema2;\r\x04" \
  then I should see "testtable2" \
  and I should see "ok: returned 1 rows" \
  and it should return 0
# the same should happen if the `in` keyword is used instead
given an executable "../pinedb/pinedb" \
  when I run \
  and I send "create schema testschema1;\r" \
  then I should see "ok" \
  when I send "create schema testschema2;\r" \
  then I should see "ok" \
  when I send "use testschema1;\r" \
  then I should see "ok" \
  when I send "create table testtable1 ( col int );\r" \
  then I should see "ok" \
  when I send "create table testschema2.testtable2 ( col int );\r" \
  then I should see "ok" \
  when I send "show tables in testschema2;\r\x04" \
  then I should see "testtable2" \
  and I should see "ok: returned 1 rows" \
  and it should return 0
# the same thing should happen if the schema name is quoted
given an executable "../pinedb/pinedb" \
  when I run \
  and I send "create schema testschema1;\r" \
  then I should see "ok" \
  when I send "create schema testschema2;\r" \
  then I should see "ok" \
  when I send "use testschema1;\r" \
  then I should see "ok" \
  when I send "create table testtable1 ( col int );\r" \
  then I should see "ok" \
  when I send "create table testschema2.testtable2 ( col int );\r" \
  then I should see "ok" \
  when I send "show tables from `testschema2`;\r\x04" \
  then I should see "testtable2" \
  and I should see "ok: returned 1 rows" \
  and it should return 0
# if no tables are present, the query should return an empty result
given an executable "../pinedb/pinedb" \
  when I run \
  and I send "create schema test;\r" \
  then I should see "ok" \
  when I send "show tables in test;\r\x04" \
  then I should see "ok: returned 0 rows" \
  and it should return 0
# if the given schema is not present, the query should fail
given an executable "../pinedb/pinedb" \
  when I run \
  and I send "create schema test;\r" \
  then I should see "ok" \
  when I send "show tables in testschema;\r\x04" \
  then I should see "error: schema `testschema`: does not exist" \
  and it should return 0
# the output should be a nice table
given an executable "../pinedb/pinedb" \
  when I run \
  and I send "create schema testschema;\r" \
  then I should see "ok" \
  when I send "use testschema;\r" \
  then I should see "ok" \
  when I send "show tables;\r" \
  then I should see "+-------+" \
  and I should see  "| table |" \
  and I should see  "|-------|" \
  and I should see  "+-------+" \
  and I should see  "ok: returned 0 rows" \
  when I send "create table short ( col int );\r" \
  then I should see "ok" \
  when I send "show tables;\r" \
  then I should see "+-------+" \
  and I should see  "| table |" \
  and I should see  "|-------|" \
  and I should see  "| short |" \
  and I should see  "+-------+" \
  and I should see  "ok: returned 1 rows" \
  when I send "create table veryveryveryveryveryverylong ( col int );\r" \
  then I should see "ok" \
  when I send "show tables;\r\x04" \
  then I should see "+------------------------------+" \
  and I should see  "|                        table |" \
  and I should see  "|------------------------------|" \
  and I should see  "|                        short |" \
  and I should see  "| veryveryveryveryveryverylong |" \
  and I should see  "+------------------------------+" \
  and I should see  "ok: returned 2 rows" \
  and it should return 0

send_user "\n"
