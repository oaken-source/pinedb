
# exp_internal 1

### test for schema creation
set test_name "test for schema creation"
# simple create schema statements should create a schema of the given name
given an executable "../pinedb/pinedb" \
  when I run \
  and I send "create schema testschema;\r" \
  then I should see "ok" \
  when I send "show schemata;\r\x04" \
  then I should see "testschema" \
  and I should see "ok: returned 1 rows" \
  and it should return 0
# the same thing should happen if the `if not exists` qualifier is used
given an executable "../pinedb/pinedb" \
  when I run \
  and I send "create schema if not exists testschema;\r" \
  then I should see "ok" \
  when I send "show schemata;\r\x04" \
  then I should see "testschema" \
  and I should see "ok: returned 1 rows" \
  and it should return 0
# the same thing should happen if the schema name is quoted using backticks
given an executable "../pinedb/pinedb" \
  when I run \
  and I send "create schema `testschema`;\r" \
  then I should see "ok" \
  when I send "show schemata;\r\x04" \
  then I should see "testschema" \
  and I should see "ok: returned 1 rows" \
  and it should return 0
# the same thing should happen if `database` is used instead of `schema`
given an executable "../pinedb/pinedb" \
  when I run \
  and I send "create database testschema;\r" \
  then I should see "ok" \
  when I send "show schemata;\r\x04" \
  then I should see "testschema" \
  and I should see "ok: returned 1 rows" \
  and it should return 0
# the query should be case insensitive
given an executable "../pinedb/pinedb" \
  when I run \
  and I send "CREATE SCHEMA testschema;\r" \
  then I should see "ok" \
  when I send "show schemata;\r\x04" \
  then I should see "testschema" \
  and I should see "ok: returned 1 rows" \
  and it should return 0

### test for schema creation using weird names
set test_name "test for schema creation using weird names"
# the query should succeed for the valid character set without backticks
given an executable "../pinedb/pinedb" \
  when I run \
  and I send "create schema abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_$;\r" \
  then I should see "ok" \
  when I send "show schemata;\r\x04" \
  then I should see "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_\\\$" \
  and I should see "ok: returned 1 rows" \
  and it should return 0
# the query should fail if invalid characters are used
given an executable "../pinedb/pinedb" \
  when I run \
  and I send "create schema test:schema;\r" \
  then I should see "error: syntax error" \
  when I send "show schemata;\r\x04" \
  then I should see "ok: returned 0 rows" \
  and it should return 0
# when the name is quoted using backticks, the query should succeed
given an executable "../pinedb/pinedb" \
  when I run \
  and I send "create schema `test:schema`;\r" \
  then I should see "ok" \
  when I send "show schemata;\r\x04" \
  then I should see "test:schema" \
  and I should see "ok: returned 1 rows" \
  and it should return 0

### test for schema creation on alreday existing schemata
set test_name "test for schema creation on already existing schemata"
# the query should fail if a schema of the same name already exists
given an executable "../pinedb/pinedb" \
  when I run \
  and I send "create schema test;\r" \
  then I should see "ok" \
  when I send "create schema test;\r" \
  then I should see "error: schema `test`: already exists" \
  when I send "show schemata;\r\x04" \
  then I should see "ok: returned 1 rows" \
  and it should return 0
# the query should fail if the schema name is quoted in backticks
given an executable "../pinedb/pinedb" \
  when I run \
  and I send "create schema test;\r" \
  then I should see "ok" \
  when I send "create schema `test`;\r" \
  then I should see "error: schema `test`: already exists" \
  when I send "show schemata;\r\x04" \
  then I should see "ok: returned 1 rows" \
  and it should return 0
# the query should succeed if the name differs in case
given an executable "../pinedb/pinedb" \
  when I run \
  and I send "create schema test;\r" \
  then I should see "ok" \
  when I send "create schema TEST;\r" \
  then I should see "ok" \
  when I send "show schemata;\r\x04" \
  then I should see "ok: returned 2 rows" \
  and it should return 0
# the query should succeed if the `if not exists` qualifier is used
given an executable "../pinedb/pinedb" \
  when I run \
  and I send "create schema test;\r" \
  then I should see "ok" \
  when I send "create schema if not exists test;\r" \
  then I should see "ok" \
  when I send "show schemata;\r\x04" \
  then I should see "ok: returned 1 rows" \
  and it should return 0

### test for the creation of multiple schemata
set test_name "test for the creation of multiple schemata"
# try to create 10 schemata
given an executable "../pinedb/pinedb" \
  when I run \
  and I send "create schema test1;\r" \
  then I should see "ok" \
  when I send "show schemata;\r" \
  then I should see "ok: returned 1 rows" \
  when I send "create schema test2;\r" \
  then I should see "ok" \
  when I send "show schemata;\r" \
  then I should see "ok: returned 2 rows" \
  when I send "create schema test3;\r" \
  then I should see "ok" \
  when I send "show schemata;\r" \
  then I should see "ok: returned 3 rows" \
  when I send "create schema test4;\r" \
  then I should see "ok" \
  when I send "show schemata;\r" \
  then I should see "ok: returned 4 rows" \
  when I send "create schema test5;\r" \
  then I should see "ok" \
  when I send "show schemata;\r" \
  then I should see "ok: returned 5 rows" \
  when I send "create schema test6;\r" \
  then I should see "ok" \
  when I send "show schemata;\r" \
  then I should see "ok: returned 6 rows" \
  when I send "create schema test7;\r" \
  then I should see "ok" \
  when I send "show schemata;\r" \
  then I should see "ok: returned 7 rows" \
  when I send "create schema test8;\r" \
  then I should see "ok" \
  when I send "show schemata;\r" \
  then I should see "ok: returned 8 rows" \
  when I send "create schema test9;\r" \
  then I should see "ok" \
  when I send "show schemata;\r" \
  then I should see "ok: returned 9 rows" \
  when I send "create schema test10;\r" \
  then I should see "ok" \
  when I send "show schemata;\r\x04" \
  then I should see "ok: returned 10 rows" \
  and it should return 0

send_user "\n"
