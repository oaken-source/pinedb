
# exp_internal 1

### test for schema dropping
set test_name "test for schema dropping"
# simple drop schema statements should drop a schema of the given name
given an executable "../pinedb/pinedb" \
  when I run \
  and I send "create schema testschema1;\r" \
  then I should see "ok" \
  when I send "create schema testschema2;\r" \
  then I should see "ok" \
  when I send "drop schema testschema1;\r" \
  then I should see "ok" \
  when I send "show schemata;\r\x04" \
  then I should see "testschema2" \
  and I should see "ok: returned 1 rows" \
  and it should return 0
# the same thing should happen if the other schema is dropped
given an executable "../pinedb/pinedb" \
  when I run \
  and I send "create schema testschema1;\r" \
  then I should see "ok" \
  when I send "create schema testschema2;\r" \
  then I should see "ok" \
  when I send "drop schema testschema2;\r" \
  then I should see "ok" \
  when I send "show schemata;\r\x04" \
  then I should see "testschema1" \
  and I should see "ok: returned 1 rows" \
  and it should return 0
# the same thing should happen if the schema is quoted using backticks
given an executable "../pinedb/pinedb" \
  when I run \
  and I send "create schema testschema1;\r" \
  then I should see "ok" \
  when I send "create schema testschema2;\r" \
  then I should see "ok" \
  when I send "drop schema `testschema1`;\r" \
  then I should see "ok" \
  when I send "show schemata;\r\x04" \
  then I should see "testschema2" \
  and I should see "ok: returned 1 rows" \
  and it should return 0
# the same thing should happen if the `if exists` qualifier is used
given an executable "../pinedb/pinedb" \
  when I run \
  and I send "create schema testschema1;\r" \
  then I should see "ok" \
  when I send "create schema testschema2;\r" \
  then I should see "ok" \
  when I send "drop schema if exists testschema1;\r" \
  then I should see "ok" \
  when I send "show schemata;\r\x04" \
  then I should see "testschema2" \
  and I should see "ok: returned 1 rows" \
  and it should return 0
# the same thing should happen if `database` is used instead of `schema`
given an executable "../pinedb/pinedb" \
  when I run \
  and I send "create schema testschema1;\r" \
  then I should see "ok" \
  when I send "create schema testschema2;\r" \
  then I should see "ok" \
  when I send "drop database testschema1;\r" \
  then I should see "ok" \
  when I send "show schemata;\r\x04" \
  then I should see "testschema2" \
  and I should see "ok: returned 1 rows" \
  and it should return 0
# the query should not be case sensitive
given an executable "../pinedb/pinedb" \
  when I run \
  and I send "create schema testschema1;\r" \
  then I should see "ok" \
  when I send "create schema testschema2;\r" \
  then I should see "ok" \
  when I send "DROP SCHEMA testschema1;\r" \
  then I should see "ok" \
  when I send "show schemata;\r\x04" \
  then I should see "testschema2" \
  and I should see "ok: returned 1 rows" \
  and it should return 0

### test for schema dropping using weird names
set test_name "test for schema dropping using weird names"
# the query should succeed for the valid character set without backticks
given an executable "../pinedb/pinedb" \
  when I run \
  and I send "create schema abcxyzABCXYZ012_\$1;\r" \
  then I should see "ok" \
  when I send "create schema abcxyzABCXYZ012_\$2;\r" \
  then I should see "ok" \
  when I send "drop schema abcxyzABCXYZ012_\$1;\r" \
  then I should see "ok" \
  when I send "show schemata;\r\x04" \
  then I should see "abcxyzABCXYZ012_\\\$2" \
  and I should see "ok: returned 1 rows" \
  and it should return 0
# the query should fail if invalid characters are used
given an executable "../pinedb/pinedb" \
  when I run \
  and I send "create schema `test:schema1`;\r" \
  then I should see "ok" \
  when I send "create schema `test:schema2`;\r" \
  then I should see "ok" \
  when I send "drop schema test:schema1;\r" \
  then I should see "error: syntax error" \
  when I send "show schemata;\r\x04" \
  then I should see "ok: returned 2 rows" \
  and it should return 0
# when the name is quoted using backticks, the query should succeed
given an executable "../pinedb/pinedb" \
  when I run \
  and I send "create schema `test:schema1`;\r" \
  then I should see "ok" \
  when I send "create schema `test:schema2`;\r" \
  then I should see "ok" \
  when I send "drop schema `test:schema1`;\r" \
  then I should see "ok" \
  when I send "show schemata;\r\x04" \
  then I should see "test:schema2" \
  then I should see "ok: returned 1 rows" \
  and it should return 0

### test for schema dropping on nonexisting schemata
set test_name "test for schema dropping on nonexisting schemata"
# the query should fail if a schema of the given name does not exist
given an executable "../pinedb/pinedb" \
  when I run \
  when I send "create schema test1;\r" \
  then I should see "ok" \
  when I send "drop schema test2;\r" \
  then I should see "error: schema `test2`: does not exist" \
  when I send "show schemata;\r\x04" \
  then I should see "ok: returned 1 rows" \
  and it should return 0
# the query should fail if the schema name is quoted in backticks
given an executable "../pinedb/pinedb" \
  when I run \
  when I send "create schema test1;\r" \
  then I should see "ok" \
  when I send "drop schema `test2`;\r" \
  then I should see "error: schema `test2`: does not exist" \
  when I send "show schemata;\r\x04" \
  then I should see "ok: returned 1 rows" \
  and it should return 0
# the query should fail if the name differs only in case
given an executable "../pinedb/pinedb" \
  when I run \
  and I send "create schema test;\r" \
  then I should see "ok" \
  when I send "drop schema TEST;\r" \
  then I should see "error: schema `TEST`: does not exist" \
  when I send "show schemata;\r\x04" \
  then I should see "ok: returned 1 rows" \
  and it should return 0
# the query should succeed if the `if not exists` qualifier is used
given an executable "../pinedb/pinedb" \
  when I run \
  and I send "create schema test1;\r" \
  then I should see "ok" \
  when I send "drop schema if exists test2;\r" \
  then I should see "ok" \
  when I send "show schemata;\r\x04" \
  then I should see "ok: returned 1 rows" \
  and it should return 0

### test for the dropping of multiple schemata
set test_name "test for the dropping of multiple schemata"
# try to create 10 schemata
given an executable "../pinedb/pinedb" \
  when I run \
  and I send "create schema test1;\r" \
  then I should see "ok" \
  when I send "show schemata;\r" \
  then I should see "ok: returned 1 rows" \
  when I send "create schema test2;\r" \
  then I should see "ok" \
  when I send "show schemata;\r" \
  then I should see "ok: returned 2 rows" \
  when I send "create schema test3;\r" \
  then I should see "ok" \
  when I send "show schemata;\r" \
  then I should see "ok: returned 3 rows" \
  when I send "create schema test4;\r" \
  then I should see "ok" \
  when I send "show schemata;\r" \
  then I should see "ok: returned 4 rows" \
  when I send "create schema test5;\r" \
  then I should see "ok" \
  when I send "show schemata;\r" \
  then I should see "ok: returned 5 rows" \
  when I send "create schema test6;\r" \
  then I should see "ok" \
  when I send "show schemata;\r" \
  then I should see "ok: returned 6 rows" \
  when I send "create schema test7;\r" \
  then I should see "ok" \
  when I send "show schemata;\r" \
  then I should see "ok: returned 7 rows" \
  when I send "create schema test8;\r" \
  then I should see "ok" \
  when I send "show schemata;\r" \
  then I should see "ok: returned 8 rows" \
  when I send "create schema test9;\r" \
  then I should see "ok" \
  when I send "show schemata;\r" \
  then I should see "ok: returned 9 rows" \
  when I send "create schema test10;\r" \
  then I should see "ok" \
  when I send "show schemata;\r" \
  then I should see "ok: returned 10 rows" \
  when I send "drop schema test1;\r" \
  then I should see "ok" \
  when I send "show schemata;\r" \
  then I should see "ok: returned 9 rows" \
  when I send "drop schema test2;\r" \
  then I should see "ok" \
  when I send "show schemata;\r" \
  then I should see "ok: returned 8 rows" \
  when I send "drop schema test3;\r" \
  then I should see "ok" \
  when I send "show schemata;\r" \
  then I should see "ok: returned 7 rows" \
  when I send "drop schema test4;\r" \
  then I should see "ok" \
  when I send "show schemata;\r" \
  then I should see "ok: returned 6 rows" \
  when I send "drop schema test5;\r" \
  then I should see "ok" \
  when I send "show schemata;\r" \
  then I should see "ok: returned 5 rows" \
  when I send "drop schema test6;\r" \
  then I should see "ok" \
  when I send "show schemata;\r" \
  then I should see "ok: returned 4 rows" \
  when I send "drop schema test7;\r" \
  then I should see "ok" \
  when I send "show schemata;\r" \
  then I should see "ok: returned 3 rows" \
  when I send "drop schema test8;\r" \
  then I should see "ok" \
  when I send "show schemata;\r" \
  then I should see "ok: returned 2 rows" \
  when I send "drop schema test9;\r" \
  then I should see "ok" \
  when I send "show schemata;\r" \
  then I should see "ok: returned 1 rows" \
  when I send "drop schema test10;\r" \
  then I should see "ok" \
  when I send "show schemata;\r\x04" \
  then I should see "ok: returned 0 rows" \
  and it should return 0

send_user "\n"
